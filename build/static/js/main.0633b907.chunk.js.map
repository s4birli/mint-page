{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","tier1","tier2","tier1Price","tier2Price","whitelistPrice","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledLogo","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft1","setClaimingNft1","claimingNft2","setClaimingNft2","feedback","setFeedback","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","claimNFTs","tier","gasLimit","walletIsInWhiteListTier1","getWhitelistPrice","getTier1Price","walletIsInWhiteListTier2","getTier2Price","totalCostWei","String","eth","getBalance","userBalance","utils","fromWei","mintTier1","estimateGas","from","value","then","estimatedGas","catch","catchError","send","to","receipt","mintTier2","message","includes","split","JSON","parse","getData","connectContract","fetch","headers","Accept","abiResponse","json","abi","configResponse","window","ethereum","Web3EthContract","setProvider","Web3","SmartContractObj","getConfig","config","useEffect","style","textAlign","display","paddingBottom","backgroundColor","paddingTop","alt","src","height","width","float","padding","borderRadius","border","boxShadow","position","top","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","isMetaMask","request","method","accounts","on","location","reload","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0633b907.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  tier1: null,\n  tier2: null,\n  tier1Price: null,\n  tier2Price: null,\n  whitelistPrice: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONTRACT_SUCCESS\":\n        return {\n          ...state,\n          loading: false,\n          smartContract: action.payload.smartContract,\n          web3: action.payload.web3,\n        };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        tier1: action.payload.tier1,\n        tier2: action.payload.tier2,\n        tier1Price: action.payload.tier1Price,\n        tier2Price: action.payload.tier2Price,\n        whitelistPrice: action.payload.whitelistPrice,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = 0\n      if (store\n        .getState()\n        .blockchain.smartContract) {\n        totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      }\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst contractSuccess = (payload) => {\n  return {\n    type: \"CONTRACT_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const contract = () => {\n  return async (dispatch) => {\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n\n    Web3EthContract.setProvider(ethereum);\n    let web3 = new Web3(ethereum);\n    const SmartContractObj = new Web3EthContract(\n      abi,\n      CONFIG.CONTRACT_ADDRESS\n    );\n\n    dispatch(\n      contractSuccess({\n        smartContract: SmartContractObj,\n        web3: web3,\n      })\n    );\n  }\n}\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          let tier1, tier2 = false\n          let tier1Price, tier2Price, whitelistPrice  = 0\n\n          if (await SmartContractObj.methods.walletIsInWhiteListTier1(accounts[0]).call()) {\n            tier1 = true\n          } \n\n          if (await SmartContractObj.methods.walletIsInWhiteListTier2(accounts[0]).call()) {\n            tier2 = true\n          }\n\n          tier1Price = web3.utils.fromWei(await SmartContractObj.methods.getTier1Price().call())\n          tier2Price = web3.utils.fromWei(await SmartContractObj.methods.getTier2Price().call())\n          whitelistPrice = web3.utils.fromWei(await SmartContractObj.methods.getWhitelistPrice().call())\n          \n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              tier1: tier1,\n              tier2: tier2,\n              tier1Price: tier1Price,\n              tier2Price: tier2Price,\n              whitelistPrice: whitelistPrice,\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect, contract } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border: none;\n  background-color: var(--button);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  margin-right: 20px;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft1, setClaimingNft1] = useState(false);\n  const [claimingNft2, setClaimingNft2] = useState(false);\n  const [feedback, setFeedback] = useState(`Click on tier to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = async (tier) => {\n\n    let cost = 0;\n    let gasLimit = 0;\n\n    if (tier === 1) {\n      if (await blockchain.smartContract.methods.walletIsInWhiteListTier1(blockchain.account).call()) {\n        cost = await blockchain.smartContract.methods.getWhitelistPrice().call()\n      } else {\n        cost = await blockchain.smartContract.methods.getTier1Price().call()\n      }\n    } else if (tier === 2) {\n      if (await blockchain.smartContract.methods.walletIsInWhiteListTier2(blockchain.account).call()) {\n        cost = await blockchain.smartContract.methods.getWhitelistPrice().call()\n      } else {\n        cost = await blockchain.smartContract.methods.getTier2Price().call()\n      }\n    }\n\n    let totalCostWei = String(cost);\n    let userBalance = await blockchain.web3.eth.getBalance(blockchain.account)\n\n    if (blockchain.web3.utils.fromWei(totalCostWei) > blockchain.web3.utils.fromWei(userBalance)) {\n      setFeedback(\"Insufficient funds\")\n      return\n    }\n\n    console.log(\"Cost: \", totalCostWei);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n\n    if (tier === 1) {\n      setClaimingNft1(true);\n      setClaimingNft2(false);\n      await blockchain.smartContract.methods\n      .mintTier1()\n      .estimateGas({\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .then((estimatedGas) => {\n        gasLimit = estimatedGas\n      })\n      .catch((error) => {\n        catchError(error)\n        setClaimingNft1(false)\n      })\n\n      if (gasLimit > 0) {\n        blockchain.smartContract.methods\n        .mintTier1()\n        .send({\n          gasLimit: String(gasLimit),\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n          );\n          setClaimingNft1(false);\n          dispatch(fetchData(blockchain.account));\n        })\n        .catch((error) => {\n          console.log(error);\n          catchError(error)\n          setClaimingNft1(false)\n        })\n      }\n    } else if (tier === 2) {\n      setClaimingNft1(false);\n      setClaimingNft2(true);\n      await blockchain.smartContract.methods\n      .mintTier2()\n      .estimateGas({\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .then((estimatedGas) => {\n        gasLimit = estimatedGas\n      })\n      .catch((error) => {\n        catchError(error)\n        setClaimingNft2(false)\n      })\n\n      if (gasLimit > 0) {\n        await blockchain.smartContract.methods\n        .mintTier2()\n        .send({\n          gasLimit: String(gasLimit),\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n          );\n          setClaimingNft2(false);\n          dispatch(fetchData(blockchain.account));\n        })\n        .catch((error) => {\n          console.log(error);\n          catchError(error)\n          setClaimingNft2(false)\n        })\n      }\n    }\n  };\n\n  const catchError = (error) => {\n    if (error.message.includes('Internal JSON-RPC error.')) {\n      const split = error.message.split('Internal JSON-RPC error.')\n      if (typeof split[1] !== 'undefined') {\n        error = JSON.parse(error.message.split('Internal JSON-RPC error.')[1])\n        setFeedback(error.message)\n      }\n    } else if (error.message) {\n      setFeedback(error.message)\n    } else {\n      setFeedback('Something went wrong.')\n    }\n  }\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== null && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const connectContract = async () => {\n    await dispatch(contract());\n    dispatch(fetchData());\n  }\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    connectContract()\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container style={{\n              textAlign: 'center',\n              display: 'inline',\n              paddingBottom: '100px',\n              backgroundColor: '#000',\n              paddingTop: '25px'\n            }}>\n      <StyledLogo alt={\"logo\"} src={\"/config/images/logo_2.png\"} style={{\n              height: '70px',\n              width: '70px',\n              display: 'block',\n              float: 'left'\n            }} />\n      <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n      </s.Container>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            {/* <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} /> */}\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n              position: 'relative',\n              top: '-120px',\n              height: '400px'\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.SpacerSmall />\n                {blockchain.account === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--label-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    {/* <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container> */}\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <s.TextDescription style={{\n                        textAlign: \"left\",\n                        width: \"20%\",\n                      }}>\n                    {blockchain.tier1 ? (blockchain.whitelistPrice > 0 ? blockchain.whitelistPrice + ' ' + CONFIG.NETWORK.SYMBOL : 'FREE') : blockchain.tier1Price + ' ' + CONFIG.NETWORK.SYMBOL}\n                    </s.TextDescription>\n                    <s.TextDescription style={{\n                        textAlign: \"left\",\n                        width: \"20%\",\n                      }}>\n                    {blockchain.tier2 ? (blockchain.whitelistPrice > 0 ? blockchain.whitelistPrice + ' ' + CONFIG.NETWORK.SYMBOL : 'FREE') : blockchain.tier2Price + ' ' + CONFIG.NETWORK.SYMBOL}\n                    </s.TextDescription>\n                    </s.Container>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft1 || claimingNft2 ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs(1);\n                          getData();\n                        }}\n                      >\n                        {claimingNft1 ? \"Minting...\" : \"Tier 1\"}\n                      </StyledButton>\n                      <StyledButton\n                        disabled={claimingNft1 || claimingNft2 ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs(2);\n                          getData();\n                        }}\n                      >\n                        {claimingNft2 ? \"Minting...\" : \"Tier 2\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            {/* <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            /> */}\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        {/* <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container> */}\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}